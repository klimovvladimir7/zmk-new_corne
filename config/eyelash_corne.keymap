#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R  &kp T                      &none         &kp Y      &kp U  &kp I              &kp O    &kp P     &kp BSPC
&kp TAB         &kp A  &kp S  &kp D     &kp F  &kp G               &none  &none  &none  &kp H      &kp J  &kp K              &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B      &none           &none         &kp N      &kp M  &kp COMMA          &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LGUI  &mo 2  &kp SPACE                                &kp ENTER  &mo 1  &kp RIGHT_CONTROL
            >;
        };

        Nav {
            display-name = "NUMBER";
            bindings = <
&kp LCTRL        &kp LS(N1)   &kp LS(N2)   &kp LS(N3)   &kp LS(N4)   &kp LS(N5)                        &none         &mo 3       &none      &kp UP     &none       &none   &kp BSPC
&kp LALT         &kp LS(N6)   &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)                 &none  &none  &none  &none       &kp LEFT   &kp DOWN   &kp RIGHT   &none   &none
&kp LSHIFT       &none        &none        &none        &none        &none         &none               &none         &none       &none      &none      &none       &none   &kp RSHFT
                                           &kp LCMD     &kp LCMD     &kp SPACE                                       &kp ENTER   &trans     &kp RCTRL
            >;
        };

        Num {
            display-name = "SYMBOL";
            bindings = <
&kp LALT        &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                       &none         &kp N6          &kp N7          &kp N8        &kp N9         &kp N0         &kp BSPC
&kp LG(SPACE)   &kp LG(A)   &kp LG(S)   &kp LG(D)   &kp LG(F)   &kp LG(G)             &none  &none  &none  &kp MINUS       &kp EQUAL       &kp LBKT      &kp RBKT       &kp BSLH       &kp GRAVE
&kp LSHIFT      &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &kp LG(B)   &none            &none         &kp LS(MINUS)   &kp LS(EQUAL)   &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(BSLH)   &kp TILDE
                                        &kp LCMD    &trans      &none                                      &none           &none           &none
            >;
        };

        Media {
            display-name = "Fn";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                         &none         &trans  &none   &none  &none  &none  &none
&none         &none           &none         &none         &kp C_VOL_DN  &kp C_VOL_UP           &none  &none  &none  &none   &none   &none  &none  &none  &none
&bt BT_CLR    &bt BT_CLR_ALL  &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &none           &none         &none   &none   &none  &none  &none  &none
                                            &none         &none         &none                                       &none   &trans  &none
            >;
        };
    };
};
